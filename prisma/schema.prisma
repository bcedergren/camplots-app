// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

// Looking for ways to speed up your queries, or scale easily with your serverless or edge functions?
// Try Prisma Accelerate: https://pris.ly/cli/accelerate-init

generator client {
  provider = "prisma-client-js"
  output   = "../generated/prisma"
}


datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  userId         String   @id @default(uuid())
  username       String
  email          String   @unique
  passwordHash   String
  subscriptionType String   @default("Free")
  role           Role     @default(USER)
  resetToken     String?
  resetTokenExpiry DateTime?
  createdAt      DateTime @default(now())
  bookings       Booking[]
}

enum Role {
  ADMIN
  HOST
  USER
}

model Host {
  hostId    String    @id @default(uuid())
  name      String
  type      String
  location  Json
  amenities Json
  createdAt DateTime  @default(now())
  bookings  Booking[]
}

model Booking {
  bookingId String   @id @default(uuid())
  userId    String
  hostId    String
  dates     Json
  status    String   @default("Pending")
  createdAt DateTime @default(now())
  user      User     @relation(fields: [userId], references: [userId])
  host      Host     @relation(fields: [hostId], references: [hostId])
  payment   Payment?
}

model Payment {
  paymentId   String   @id @default(uuid())
  bookingId   String   @unique
  amount      Decimal
  status      String   @default("Pending")
  processedAt DateTime @default(now())
  booking     Booking  @relation(fields: [bookingId], references: [bookingId])
}
